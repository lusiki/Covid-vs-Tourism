GSPC$GSPC.Close,
GDAXI$GDAXI.Close,
FTSE$FTSE.Close,
oil,
gold$`EURO (AM`,
CROCovidXTS,
euCovidXTS)
COVIDtur <- merge(CrobexTur,COVIDtur, join = "left")
COVIDtur <- merge(Crobex, COVIDtur, join = "left")
COVIDtur <- COVIDtur[index(COVIDtur) > "2019-01-01"]
colnames(COVIDtur)[1] <- "crobex"
colnames(COVIDtur)[2] <- "crobexTur"
colnames(COVIDtur)[3] <- "vix"
colnames(COVIDtur)[4] <- "sp500"
colnames(COVIDtur)[5] <- "dax"
colnames(COVIDtur)[6] <- "ftse"
colnames(COVIDtur)[7] <- "oil"
colnames(COVIDtur)[8] <- "gold"
colnames(COVIDtur)[9] <- "caseCRO"
colnames(COVIDtur)[10] <- "caseEU"
COVIDtur %>%
as.data.frame() %>%
mutate_at(c("caseCRO","caseEU"),~replace(.,is.na(.),0)) %>%
drop_na() %>%
as.xts() -> COVIDtur
COVIDtur$lockdwn <- 0
COVIDtur$lockdwn[index(COVIDtur) >= "2020-01-23"] <- 1
COVIDturDF <- fortify(COVIDtur)
dfMelted <- melt(COVIDturDF, id.vars="Index")
COVIDturDF %>%
# select(Index:gold) %>%
melt(., id.vars = "Index") %>%
group_by(variable) %>%
mutate(log = log(value),
diff = c(0,diff(value))) -> CDFld
raw <- CDFld %>% select(Index, variable, value) %>% spread(variable,value)
diff <- CDFld %>% select(Index, variable,diff) %>% spread(variable,diff)
log <- CDFld %>% select(Index, variable,log) %>% spread(variable,log)
all <- left_join(raw, diff, by="Index") %>% left_join(.,log, by = "Index")
diff <- diff %>% select(-lockdwn) %>% mutate(., lockdown = raw$lockdwn)
reg <- lm(crobexTur ~ lockdown + caseEU + caseCRO + sp500 + crobex + dax + oil + gold, data = diff[-c(178,195,235,273,278,284,285,286,293,297,298,305,306,328,329,330,335,341,423,428,436,450,451,457,459,460,471,492),])
options(scipen=999)
summary(reg)
plot(reg, which = 1)
plot(reg, which = 2)
plot(reg, which = 3)
plot(reg, which = 4)
install.packages("estudy2")
tickers <- c("ALV.DE", "CS.PA", "G.MI", "HNR1.HA", "HSX.L", "MUV2.DE", "RSA.L",
"TOP.CO")
prices <- get_prices_from_tickers(tickers,
start = as.Date("2000-01-01"),
end = as.Date("2002-01-01"),
quote = "Close",
retclass = "zoo")
library(estudy2)
prices <- get_prices_from_tickers(tickers,
start = as.Date("2000-01-01"),
end = as.Date("2002-01-01"),
quote = "Close",
retclass = "zoo")
prices
str(prices)
library(tidy)
library(quantmod)
library(Quandl)
library(tidyverse)
library(tidyquant)
library(timetk)
library(forecast)
library(highcharter)
library(coronavirus)
library(tidycovid19)
library(zoo)
library(kableExtra)
library(rvest)
library(tidyr)
library(reshape2)
library(tsoutliers)
library(tseries)
Quandl.api_key("jvwknzKzNdiuqGPCyXcT")
CrobexTur <- Quandl("ZAGREBSE/CROBEXTURIST",type = "zoo",collapse = "daily",start_date = "2019-01-01", end_date = Sys.Date())
Crobex <- Quandl("ZAGREBSE/CROBEX", type = "zoo",collapse = "daily",start_date = "2019-01-01", end_date = Sys.Date())
rates <- get_rates_from_prices(CrobexTur,
quote = "Close",
multi_day = TRUE,
compounding = "continuous")
rates_indx <- get_rates_from_prices(Crobex,
quote = "Close",
multi_day = TRUE,
compounding = "continuous")
range(Crobex)
securities_returns <- apply_market_model(
rates = rates,
regressor = rates_indx,
same_regressor_for_all = TRUE,
market_model = "sim",
estimation_method = "ols",
estimation_start = as.Date("2019-01-01"),
estimation_end = as.Date("2020-01-23")
)
parametric_tests(list_of_returns = securities_returns,
event_start = as.Date("2020-01-24"),
event_end = as.Date("2020-01-30"))
securities_returns
parametric_tests(list_of_returns = securities_returns,
event_start = as.Date("2020-01-20"),
event_end = as.Date("2020-01-30"))
securities_returns <- apply_market_model(
rates = rates,
regressor = rates_indx,
same_regressor_for_all = TRUE,
market_model = "sim",
estimation_method = "ols",
estimation_start = as.Date("2019-01-01"),
estimation_end = as.Date("2020-01-20")
)
parametric_tests(list_of_returns = securities_returns,
event_start = as.Date("2020-01-20"),
event_end = as.Date("2020-01-30"))
rates
parametric_tests(list_of_returns = securities_returns,
event_start = as.Date("2020-01-21"),
event_end = as.Date("2020-01-30"))
Arena <- Quandl("ARNT-R-A",type = "zoo",collapse = "daily",start_date = "2019-01-01", end_date = Sys.Date())
Arena <- Quandl("ARNT",type = "zoo",collapse = "daily",start_date = "2019-01-01", end_date = Sys.Date())
Arena <- Quandl("ARNTRA",type = "zoo",collapse = "daily",start_date = "2019-01-01", end_date = Sys.Date())
Arena <- Quandl("ARNTRA",type = "zoo",collapse = "daily",start_date = "2019-01-01", end_date = Sys.Date())
Arena <- Quandl("CROBEX",type = "zoo",collapse = "daily",start_date = "2019-01-01", end_date = Sys.Date())
Crobex <- Quandl("ZAGREBSE/ARNTRA", type = "zoo",collapse = "daily",start_date = "2019-01-01", end_date = Sys.Date())
CrobexTur <- Quandl("ZAGREBSE/CROBEXTURIST",type = "zoo",collapse = "daily",start_date = "2019-01-01", end_date = Sys.Date())
CrobexKonst <- Quandl("ZAGREBSE/CROBEXKONSTRUKT",type = "zoo",collapse = "daily",start_date = "2019-01-01", end_date = Sys.Date())
CrobexKonst
proba <- merge(CrobexTur, CrobexKonst, all = FALSE)
rates <- get_rates_from_prices(proba,
quote = "Close",
multi_day = TRUE,
compounding = "continuous")
rates_indx <- get_rates_from_prices(Crobex,
quote = "Close",
multi_day = TRUE,
compounding = "continuous")
securities_returns <- apply_market_model(
rates = rates,
regressor = rates_indx,
same_regressor_for_all = TRUE,
market_model = "sim",
estimation_method = "ols",
estimation_start = as.Date("2019-01-01"),
estimation_end = as.Date("2020-01-20")
)
parametric_tests(list_of_returns = securities_returns,
event_start = as.Date("2020-01-21"),
event_end = as.Date("2020-01-30"))
plot(CrobexTur)
library(plotly)
today <- Sys.Date()
tm <- seq(0, 600, by = 10)
tm
x <- today - tm
x
y <- rnorm(length(x))
library(TSstudio)
install.packages("TSstudio")
library(TSstudio)
ts_plot(CrobexTur)
ts_plot(Crobex)
securities_returns <- apply_market_model(
rates = rates,
regressor = rates_indx,
same_regressor_for_all = TRUE,
market_model = "sim",
estimation_method = "ols",
estimation_start = as.Date("2019-01-01"),
estimation_end = as.Date("2020-01-23")
)
parametric_tests(list_of_returns = securities_returns,
event_start = as.Date("2020-02-19"),
event_end = as.Date("2020-04-14"))
parametric_tests(list_of_returns = securities_returns,
event_start = as.Date("2020-02-19"),
event_end = as.Date("2020-04-14"))
parametric_tests(list_of_returns = securities_returns,
event_start = as.Date("2020-02-24"),
event_end = as.Date("2020-04-14"))
parametric_tests(list_of_returns = securities_returns,
event_start = as.Date("2020-02-24"),
event_end = as.Date("2020-04-14"))
r <- GET("https://zse.hr/json/securityHistory/HRADRSPA0009/2019-10-23/2021-04-13/hr?trading_model_id=ALL")
library(httr)
r <- GET("https://zse.hr/json/securityHistory/HRADRSPA0009/2019-10-23/2021-04-13/hr?trading_model_id=ALL")
View(r)
r <- GET("https://zse.hr/json/securityHistory/74780000Z0PH7TFW3I85/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
View(r)
r <- GET("https://zse.hr/json/securityHistory/HRADRSPA0009/2019-10-23/2021-04-13/hr?trading_model_id=ALL")
View(r)
View(r)
content(r, "text")
raw <- str(content(r, "parsed"))
View(raw)
head(raw)
devtools::install_github("MislavSag/stocksee")
library(stocksee)
install.packages("stocksee")
devtools::install_github("stocksee")
str(content(r))
r
r <- GET("https://zse.hr/json/securityHistory/HRARNTRA0004/2019-10-23/2021-04-13/hr?trading_model_id=ALL")
bin <- str(content(r))
bin <- str(content(r,"raw"))
bin <- str(content(r,"parsed"))
response <- content(r, as = "text", encoding = "UTF-8")
df <- fromJSON(response, flatten = TRUE) %>%
data.frame()
library(jsonlite)
df <- fromJSON(response, flatten = TRUE) %>%
data.frame()
View(df)
r <- GET("https://zse.hr/json/securityHistory/HRARNTRA0004/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
ARENA <- fromJSON(response, flatten = TRUE) %>%  data.frame()
View(ARENA)
nemes(ARENA)
names(ARENA)
ARENA <- fromJSON(response, flatten = TRUE) %>%  data.frame() %>% select(Datum = rows.date, Price = rows.last_price )
View(ARENA)
str(ARENA)
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Datum = rows.date, ARNT = rows.last_price ) %>%
mutate( Datum = as.Date(Datum,"%d.%m.%y"))
str(ARENA)
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Datum = rows.date, ARNT = rows.last_price ) %>%
mutate( Datum = as.Date(Datum,"%d.%m.%y"),
ARNT = as.numeric(ARNT))
View(ARENA)
ARNT = as.numeric(gsub(",","",.$numbers)
ARNT = as.numeric(gsub(",","",.$numbers))
data.frame() %>%
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Datum = rows.date, ARNT = rows.last_price ) %>%
mutate( Datum = as.Date(Datum,"%d.%m.%y"),
ARNT = as.numeric(gsub(",","",.$numbers)))
View(ARENA)
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Datum = rows.date, ARNT = rows.last_price ) %>%
mutate( Datum = as.Date(Datum,"%d.%m.%y"),
ARNT = as.numeric(gsub(",","",.$ARNT)))
View(ARENA)
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Datum = rows.date, ARNT = rows.last_price ) %>%
mutate( Datum = as.Date(Datum,"%d.%m.%y"),
ARNT = as.numeric(gsub("(.*),.*", "\\1", ARNT)))
r <- GET("https://zse.hr/json/securityHistory/HRMAISRA0007/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
MAISTRA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Datum = rows.date, MAIS = rows.last_price ) %>%
mutate( Datum = as.Date(Datum,"%d.%m.%y"),
MAIS = as.numeric(gsub("(.*),.*", "\\1", MAIS)))
r <- GET("https://zse.hr/json/securityHistory/HRRIVPRA0000/2019-10-23/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
VALAMAR <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Datum = rows.date, RIVP = rows.last_price ) %>%
mutate( Datum = as.Date(Datum,"%d.%m.%y"),
RIVP = as.numeric(gsub("(.*),.*", "\\1", RIVP)))
r <- GET("https://zse.hr/json/securityHistory/HRARNTRA0004/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Datum = rows.date, ARNT = rows.last_price ) %>%
mutate( Datum = as.Date(Datum,"%d.%m.%y"),
ARNT = as.numeric(gsub("(.*),.*", "\\1", ARNT)))
library(plyr)
r <- GET("https://zse.hr/json/securityHistory/HRARNTRA0004/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = as.Date(Date,"%d.%m.%y"),
ARNT = as.numeric(gsub("(.*),.*", "\\1", ARNT)))
r <- GET("https://zse.hr/json/securityHistory/HRMAISRA0007/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
MAISTRA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, MAIS = rows.last_price ) %>%
mutate( Date = as.Date(Date,"%d.%m.%y"),
MAIS = as.numeric(gsub("(.*),.*", "\\1", MAIS)))
r <- GET("https://zse.hr/json/securityHistory/HRRIVPRA0000/2019-10-23/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
VALAMAR <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, RIVP = rows.last_price ) %>%
mutate( Date = as.Date(Date,"%d.%m.%y"),
RIVP = as.numeric(gsub("(.*),.*", "\\1", RIVP)))
TOURISMdta <-  join_all(list(ARENA,MAISTRA,VALAMAR), by='Date', type='left')
View(TOURISMdta)
View(ARENA)
r <- GET("https://zse.hr/json/securityHistory/HRARNTRA0004/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price )
View(ARENA)
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = as.Date(Date,"%d.%m.%y"),
ARNT = as.numeric(gsub("(.*),.*", "\\1", ARNT)))
View(ARENA)
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price )
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = as.Date(Date,"%d.%m.%y."),
ARNT = as.numeric(gsub("(.*),.*", "\\1", ARNT)))
View(ARENA)
mutate( Date = gsub(sub("[.]$", "",Date),
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub(sub("[.]$", "",Date)),
Date = as.Date(Date,"%d.%m.%y"),
ARNT = as.numeric(gsub("(.*),.*", "\\1", ARNT)))
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub(sub("[.]$", "",Date)),
Date = as.Date(Date,"%d.%m.%y"),
ARNT = as.numeric(gsub("(.*),.*", "\\1", ARNT)))
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub(sub("[.]$","", Date)),
Date = as.Date(Date,"%d.%m.%y"),
ARNT = as.numeric(gsub("(.*),.*", "\\1", ARNT)))
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date),
Date = as.Date(Date,"%d.%m.%y"),
ARNT = as.numeric(gsub("(.*),.*", "\\1", ARNT)))
str(ARENA)
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date),
Date = as.Date(Date,"%d.%m.%y"),
ARNT = as.numeric(gsub("(.*),.*", "\\1", ARNT)))
str(ARENA)
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date))
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date),
Date = as.Date(Date,"%d.%m.%y"))
str(ARENA)
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date)) %>%
mutate( Date = as.Date(Date,"%d.%m.%y"))
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date))
Date = gsub(sub("[.]$", "",Date),
r <- GET("https://zse.hr/json/securityHistory/HRARNTRA0004/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date)) %>%
mutate( Date = as.Date(Date,"%d-%m-%Y"))
,
ARNT = as.numeric(gsub("(.*),.*", "\\1", ARNT)))
Date = gsub(sub("[.]$", "",Date),
r <- GET("https://zse.hr/json/securityHistory/HRARNTRA0004/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date)) %>%
mutate( Date = as.Date(Date,"%d-%m-%Y")))
Date = gsub(sub("[.]$", "",Date),
r <- GET("https://zse.hr/json/securityHistory/HRARNTRA0004/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date)) %>%
mutate( Date = as.Date(Date,"%d-%m-%Y"))
,
ARNT = as.numeric(gsub("(.*),.*", "\\1", ARNT)))
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date)) %>%
mutate( Date = as.Date(Date,"%d-%m-%Y"))
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date)) %>%
mutate( Date = as.Date(Date,"%d.%m.%Y"))
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date)) %>%
mutate( Date = as.Date(Date,"%d.%m.%Y"),
ARNT = as.numeric(gsub("(.*),.*", "\\1", ARNT)))
r <- GET("https://zse.hr/json/securityHistory/HRARNTRA0004/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date)) %>%
mutate( Date = as.Date(Date,"%d.%m.%Y"),
ARNT = as.numeric(gsub("(.*),.*", "\\1", ARNT)))
r <- GET("https://zse.hr/json/securityHistory/HRMAISRA0007/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
MAISTRA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, MAIS = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date)) %>%
mutate( Date = as.Date(Date,"%d.%m.%Y"),
MAIS = as.numeric(gsub("(.*),.*", "\\1", MAIS)))
r <- GET("https://zse.hr/json/securityHistory/HRRIVPRA0000/2019-10-23/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
VALAMAR <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, RIVP = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date)) %>%
mutate( Date = as.Date(Date,"%d.%m.%Y"),
RIVP = as.numeric(gsub("(.*),.*", "\\1", RIVP)))
TOURISMdta <-  join_all(list(ARENA,MAISTRA,VALAMAR), by='Date', type='left')
View(TOURISMdta)
TOURISMdta <-  join_all(list(ARENA,MAISTRA,VALAMAR), by='Date', type='left') %>% drop_na()
TOURISMdta <-  join_all(list(ARENA,MAISTRA,VALAMAR), by='Date', type='left')
TOURISMdta <-  join_all(list(ARENA,MAISTRA,VALAMAR), by='Date', type='left') %>% drop_na()
str(TOURISMdta)
range(TOURISMdta$Date)
r <- GET("https://zse.hr/json/securityHistory/HRRIVPRA0000/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
VALAMAR <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, RIVP = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date)) %>%
mutate( Date = as.Date(Date,"%d.%m.%Y"),
RIVP = as.numeric(gsub("(.*),.*", "\\1", RIVP)))
TOURISMdta <-  join_all(list(ARENA,MAISTRA,VALAMAR), by='Date', type='left') %>% drop_na()
range(TOURISMdta$Date)
Crobex <- Quandl("ZAGREBSE/CROBEX", type = "zoo",collapse = "daily",start_date = "2019-01-02", end_date = Sys.Date())
library(zoo)
TOURISMdta <- read.zoo(TOURISMdta)
TOURISMdta <-  join_all(list(ARENA,MAISTRA,VALAMAR), by='Date', type='left') %>% drop_na()
View(TOURISMdta)
TOURISMdta <- as.zoo(TOURISMdta)
TOURISMdta <- as.zoo(TOURISMdta, order.by = as.Date(rownames(TOURISMdta)))
View(TOURISMdta)
str(TOURISMdta)
TOURISMdta <- xts(TOURISMdta)
TOURISMdta <- xts(TOURISMdta, order.by = Date)
TOURISMdta <- xts(TOURISMdta, order.by = "Date")
TOURISMdta <- read.zoo(TOURISMdta)
TOURISMdta <-  join_all(list(ARENA,MAISTRA,VALAMAR), by='Date', type='left') %>% drop_na()
TOURISMdta <- read.zoo(TOURISMdta)
TOURISMdta <- read.zoo(TOURISMdta, Date)
TOURISMdta <-  join_all(list(ARENA,MAISTRA,VALAMAR), by='Date', type='left') %>% drop_na()
TOURISMdta <- read.zoo(TOURISMdta, Date)
str(TOURISMdta)
TOURISMdta <- read.zoo(TOURISMdta, order.by = Date)
TOURISMdta <- xts(TOURISMdta, order.by = Date)
TOURISMdta <- zoo(TOURISMdta, order.by = TOURISMdta$Date)
TOURISMdta <- zoo(TOURISMdta[,-1], order.by = TOURISMdta$Date)
TOURISMdta <-  join_all(list(ARENA,MAISTRA,VALAMAR), by='Date', type='left') %>% drop_na()
TOURISMdta <- zoo(TOURISMdta[,-1], order.by = TOURISMdta$Date)
TOURISMdta <-  join_all(list(ARENA,MAISTRA,VALAMAR), by='Date', type='left') %>% drop_na()
r <- GET("https://zse.hr/json/securityHistory/HRARNTRA0004/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
ARENA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, ARNT = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date)) %>%
mutate( Date = as.Date(Date,"%d.%m.%Y"),
ARNT = as.numeric(gsub("(.*),.*", "\\1", ARNT)))
r <- GET("https://zse.hr/json/securityHistory/HRMAISRA0007/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
MAISTRA <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, MAIS = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date)) %>%
mutate( Date = as.Date(Date,"%d.%m.%Y"),
MAIS = as.numeric(gsub("(.*),.*", "\\1", MAIS)))
r <- GET("https://zse.hr/json/securityHistory/HRRIVPRA0000/2019-01-01/2021-04-13/hr?trading_model_id=ALL")
response <- content(r, as = "text", encoding = "UTF-8")
VALAMAR <- fromJSON(response, flatten = TRUE) %>%
data.frame() %>%
select(Date = rows.date, RIVP = rows.last_price ) %>%
mutate( Date = gsub("[.]$","", Date)) %>%
mutate( Date = as.Date(Date,"%d.%m.%Y"),
RIVP = as.numeric(gsub("(.*),.*", "\\1", RIVP)))
